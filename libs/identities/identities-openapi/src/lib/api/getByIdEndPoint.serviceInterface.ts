/**
 * Identities.Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';

import { AppReaderModelContract } from '../model/models';
import { ChallengeDefinitionReaderModelContract } from '../model/models';
import { ChallengeReaderModelContract } from '../model/models';
import { FeatureReaderModelContract } from '../model/models';
import { LicenseReaderModelContract } from '../model/models';
import { MembershipReaderModelContract } from '../model/models';
import { MembershipReduceModelContract } from '../model/models';
import { OrganizationReaderModelContract } from '../model/models';
import { PersonReaderModelContract } from '../model/models';
import { QuestionReaderModelContract } from '../model/models';
import { QuizDefinitionReaderModelContract } from '../model/models';
import { QuizItemReaderModelContract } from '../model/models';
import { QuizReaderModelContract } from '../model/models';
import { RepositoryReaderModelContract } from '../model/models';
import { ReviewReaderModelContract } from '../model/models';
import { RoleReaderModelContract } from '../model/models';
import { SessionReaderModelContract } from '../model/models';
import { SubscriptionReaderModelContract } from '../model/models';
import { UserReaderModelContract } from '../model/models';


import { IdentitiesApiConfiguration }                                     from '../identities.api.configuration';



export interface GetByIdEndPointServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: IdentitiesApiConfiguration;

    /**
     *
     *
     * @param appId
     * @param id
     */
    appsAppIdFeaturesIdGet(appId: string, id: string, extraHttpRequestParams?: any): Observable<FeatureReaderModelContract>;

    /**
     *
     *
     * @param id
     * @param appId
     */
    appsAppIdRolesIdGet(id: string, appId: string, extraHttpRequestParams?: any): Observable<RoleReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    appsIdGet(id: string, extraHttpRequestParams?: any): Observable<AppReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    challengeDefinitionsIdGet(id: string, extraHttpRequestParams?: any): Observable<ChallengeDefinitionReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    challengesIdGet(id: string, extraHttpRequestParams?: any): Observable<ChallengeReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    membershipsIdGet(id: string, extraHttpRequestParams?: any): Observable<MembershipReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    organizationsIdGet(id: string, extraHttpRequestParams?: any): Observable<OrganizationReaderModelContract>;

    /**
     *
     *
     * @param organizationId
     * @param id
     */
    organizationsOrganizationIdSubscriptionsIdGet(organizationId: string, id: string, extraHttpRequestParams?: any): Observable<SubscriptionReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    personsIdGet(id: string, extraHttpRequestParams?: any): Observable<PersonReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    questionsIdGet(id: string, extraHttpRequestParams?: any): Observable<QuestionReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    quizDefinitionsIdGet(id: string, extraHttpRequestParams?: any): Observable<QuizDefinitionReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    quizzesIdGet(id: string, extraHttpRequestParams?: any): Observable<QuizReaderModelContract>;

    /**
     *
     *
     * @param id
     * @param quizId
     */
    quizzesQuizIdQuizItemsIdGet(id: string, quizId: string, extraHttpRequestParams?: any): Observable<QuizItemReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    repositoriesIdGet(id: string, extraHttpRequestParams?: any): Observable<RepositoryReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    reviewsIdGet(id: string, extraHttpRequestParams?: any): Observable<ReviewReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    sessionsIdGet(id: string, extraHttpRequestParams?: any): Observable<SessionReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    usersIdGet(id: string, extraHttpRequestParams?: any): Observable<UserReaderModelContract>;

    /**
     *
     *
     * @param id
     */
    usersIdMembershipsDefaultGet(id: string, extraHttpRequestParams?: any): Observable<MembershipReduceModelContract>;

    /**
     *
     *
     * @param userId
     * @param subscriptionId
     * @param id
     */
    usersUserIdSubscriptionsSubscriptionIdLicensesIdGet(userId: string, subscriptionId: string, id: string, extraHttpRequestParams?: any): Observable<LicenseReaderModelContract>;

}
