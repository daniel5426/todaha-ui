/**
 * Identities.Services
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { HttpHeaders }                                       from '@angular/common/http';

import { Observable }                                        from 'rxjs';



import { IdentitiesApiConfiguration }                                     from '../identities.api.configuration';



export interface DeleteEndPointServiceInterface {
    defaultHeaders: HttpHeaders;
    configuration: IdentitiesApiConfiguration;

    /**
     *
     *
     * @param appId
     * @param id
     */
    appsAppIdFeaturesIdDelete(appId: string, id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param appId
     * @param id
     */
    appsAppIdRolesIdDelete(appId: string, id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    appsIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    challengeDefinitionsIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    challengesIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    membershipsIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    organizationsIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param organizationId
     * @param id
     */
    organizationsOrganizationIdSubscriptionsIdDelete(organizationId: string, id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    personsIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    questionsIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    quizDefinitionsIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    quizzesIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     * @param quizId
     */
    quizzesQuizIdQuizItemsIdDelete(id: string, quizId: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    repositoriesIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    reviewsIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    sessionsIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param id
     */
    usersIdDelete(id: string, extraHttpRequestParams?: any): Observable<boolean>;

    /**
     *
     *
     * @param userId
     * @param subscriptionId
     * @param id
     */
    usersUserIdSubscriptionsSubscriptionIdLicensesIdDelete(userId: string, subscriptionId: string, id: string, extraHttpRequestParams?: any): Observable<boolean>;

}
